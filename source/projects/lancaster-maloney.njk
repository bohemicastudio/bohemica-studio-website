---
permalink: /projects/lancaster-maloney.html
---

{% set project = "lancaster-maloney" %}

{% from "components/button-overview-library.njk" import buttonBackLibrary %}

<div x-data="(function () { return {
			translation: {
				en: {
				},
				cs: {
				}
			}
		}
		})()">

	<div class="flex flex-row items-center pb-8 space-x-6 border-b border-gray-400">
		{{ buttonBackLibrary() }}
		{# <hr class="w-40 border-gray-500">
		<h3 class="text-3xl font-bold text-gray-900" x-text="messages[$store.global.language].title"></h3> #}
	</div>

	<div class="mx-auto prose prose-sm sm:prose md:prose-lg lg:prose-xl"> {# style="max-width: none !important;" #}

		<div class="flex flex-grow items-center">
			<img x-bind:class="`h-${$store['translation.projects'].return(`list['{{ project }}'].logoHeight`)}`" x-bind:src="`./images/project/{{ project }}/${$store['translation.projects'].return(`list['{{ project }}'].logo`)}`">
		</div>

		<div class="grid gap-y-2 gap-x-5 font-medium" style="grid-template-columns: min-content auto">
			<span class="text-gray-500 whitespace-nowrap font-dm-mono" x-text="$store['translation.projects'].return('labels.client') + ':'"></span>
			<span class="text-gray-800" x-text="$store['translation.projects'].return(`list['{{ project }}'].client`)"></span>
			<span class="text-gray-500 whitespace-nowrap font-dm-mono" x-text="$store['translation.projects'].return('labels.year') + ':'"></span>
			<span class="text-gray-800" x-text="$store['translation.projects'].return(`list['{{ project }}'].year`)"></span>
			<span class="text-gray-500 whitespace-nowrap font-dm-mono" x-text="$store['translation.projects'].return('labels.type') + ':'"></span>
			<span class="text-gray-800" x-text="$store['translation.projects'].return(`list['{{ project }}'].type`)"></span>
			<span class="text-gray-500 whitespace-nowrap font-dm-mono" x-text="$store['translation.projects'].return('labels.industry') + ':'"></span>
			<span class="text-gray-800" x-text="$store['translation.projects'].return(`list['{{ project }}'].industry`)"></span>
			<span class="text-gray-500 whitespace-nowrap font-dm-mono" x-text="$store['translation.projects'].return('labels.platforms') + ':'"></span>
			<span class="text-gray-800" x-text="$store['translation.projects'].return(`list['{{ project }}'].platforms`)"></span>
			<span class="text-gray-500 whitespace-nowrap font-dm-mono" x-text="$store['translation.projects'].return('labels.stack') + ':'"></span>
			<span class="text-gray-800" x-text="$store['translation.projects'].return(`list['{{ project }}'].stack`)"></span>
		</div>

		<hr class="border-gray-500">

		<h3>Project description</h3>
		<p>
			Lancaster Maloney was established in 2003 and has grown into an innovative, dynamic principal design practice of talented professionals – expert in the design, property care and management of the built environment.
		</p>
		<p>The aim of this project was to improve Lancaster Maloney’s internal property management processes. They had been using Microsoft Access database for many years to manage their property maintenance and repairs prior to the web-based application we had developed.</p>
		<figure>
			<figcaption>Original MS Access application</figcaption>
			<picture>
				<source srcset="./images/project/{{ project }}/2.webp" type="image/webp">
				<source srcset="./images/project/{{ project }}/2.png" type="image/png">
				<img src="./images/project/{{ project }}/2.png" class="w-full rounded-lg border border-gray-300" media="(min-width: 960px)" loading="lazy">
			</picture>
		</figure>
		<h3>Process</h3>
		<p>The most intricate part of the process was establishing the models and relationships between. The system was fairly complicated so there were many close discussions with the LM team to get it right.</p>
		<figure>
			<figcaption><strong>Database structure</strong></figcaption>
			<picture>
				<source srcset="./images/project/{{ project }}/3.webp" type="image/webp">
				<source srcset="./images/project/{{ project }}/3.png" type="image/png">
				<img src="./images/project/{{ project }}/3.png" class="w-full rounded-lg border border-gray-300" media="(min-width: 960px)" loading="lazy">
			</picture>
		</figure>
		<p>There were a few datasets in its core, each with an ability to perform basic CRUD operations inside the dashboard environment:</p>
		<ul>
			<li>Jobs</li>
			<li>Clients</li>
			<li>Contractors</li>
			<li>Sites</li>
			<li>Site tasks</li>
			<li>Contracts</li>
		</ul>
		<figure>
			<figcaption>The dashboard platform allowed the LM team to manage all the datasets in one place.</figcaption>
			<picture>
				<source srcset="./images/project/{{ project }}/4.webp" type="image/webp">
				<source srcset="./images/project/{{ project }}/4.png" type="image/png">
				<img src="./images/project/{{ project }}/4.png" class="w-full rounded-lg border border-gray-300" media="(min-width: 960px)" loading="lazy">
			</picture>
		</figure>
		<p>We also implemented multiple user access levels:</p>
		<ul>
			<li>Administrator - full access, for internal use
			<li>Facility manager - access to a specific client with a subset of properties
			<li>Site manager - access to a single site
		</ul>

		<h3>Final result</h3>
		<figure>
			<figcaption><strong>1. Dashboard overview</strong></figcaption>

		</figure>

		Planned Preventive Maintenance - legally required tasks, repeated weekly, monthly and/or yearly

		Reactive Maintenance - one-off jobs, react to the current needs/issues

		Daily Site Manager Tasks - repeat daily, site specific

		Job status - Protocols

		Email integration

		Global list management and sorting

	</div>
</div>


